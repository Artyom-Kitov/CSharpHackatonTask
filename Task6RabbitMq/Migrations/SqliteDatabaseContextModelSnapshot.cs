// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task6RabbitMq.Database;

#nullable disable

namespace Task6RabbitMq.Migrations
{
    [DbContext(typeof(SqliteDatabaseContext))]
    partial class SqliteDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.Hackaton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<double>("Harmony")
                        .HasColumnType("REAL")
                        .HasColumnName("harmony");

                    b.HasKey("Id");

                    b.ToTable("hackaton", (string)null);
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.Junior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("junior", (string)null);
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.JuniorPreference", b =>
                {
                    b.Property<int>("HackatonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hackaton_id");

                    b.Property<int>("JuniorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("junior_id");

                    b.Property<int>("TeamleadId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("teamlead_id");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER")
                        .HasColumnName("priority");

                    b.HasKey("HackatonId", "JuniorId", "TeamleadId");

                    b.HasIndex("JuniorId");

                    b.HasIndex("TeamleadId");

                    b.ToTable("junior_preference", (string)null);
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.Team", b =>
                {
                    b.Property<int>("HackatonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hackaton_id");

                    b.Property<int>("JuniorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("junior_id");

                    b.Property<int>("TeamleadId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("teamlead_id");

                    b.HasKey("HackatonId", "JuniorId", "TeamleadId");

                    b.HasIndex("JuniorId");

                    b.HasIndex("TeamleadId");

                    b.ToTable("team", (string)null);
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.Teamlead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("teamlead", (string)null);
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.TeamleadPreference", b =>
                {
                    b.Property<int>("HackatonId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hackaton_id");

                    b.Property<int>("JuniorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("junior_id");

                    b.Property<int>("TeamleadId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("teamlead_id");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER")
                        .HasColumnName("priority");

                    b.HasKey("HackatonId", "JuniorId", "TeamleadId");

                    b.HasIndex("JuniorId");

                    b.HasIndex("TeamleadId");

                    b.ToTable("teamlead_preference", (string)null);
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.JuniorPreference", b =>
                {
                    b.HasOne("DatabaseEntitiesLib.Entity.Hackaton", "Hackaton")
                        .WithMany()
                        .HasForeignKey("HackatonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseEntitiesLib.Entity.Junior", "Junior")
                        .WithMany()
                        .HasForeignKey("JuniorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseEntitiesLib.Entity.Teamlead", "PreferredTeamlead")
                        .WithMany()
                        .HasForeignKey("TeamleadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hackaton");

                    b.Navigation("Junior");

                    b.Navigation("PreferredTeamlead");
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.Team", b =>
                {
                    b.HasOne("DatabaseEntitiesLib.Entity.Hackaton", "Hackaton")
                        .WithMany("Teams")
                        .HasForeignKey("HackatonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseEntitiesLib.Entity.Junior", "Junior")
                        .WithMany()
                        .HasForeignKey("JuniorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseEntitiesLib.Entity.Teamlead", "Teamlead")
                        .WithMany()
                        .HasForeignKey("TeamleadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hackaton");

                    b.Navigation("Junior");

                    b.Navigation("Teamlead");
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.TeamleadPreference", b =>
                {
                    b.HasOne("DatabaseEntitiesLib.Entity.Hackaton", "Hackaton")
                        .WithMany()
                        .HasForeignKey("HackatonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseEntitiesLib.Entity.Junior", "PreferredJunior")
                        .WithMany()
                        .HasForeignKey("JuniorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseEntitiesLib.Entity.Teamlead", "Teamlead")
                        .WithMany()
                        .HasForeignKey("TeamleadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hackaton");

                    b.Navigation("PreferredJunior");

                    b.Navigation("Teamlead");
                });

            modelBuilder.Entity("DatabaseEntitiesLib.Entity.Hackaton", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
